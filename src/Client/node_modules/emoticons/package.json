{
  "name": "emoticons",
  "description": "Parse text emoticons and replace them by graphics.",
  "version": "0.1.8",
  "author": {
    "name": "Oleg Slobodskoi",
    "email": "oleg008@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:kof/emoticons.git"
  },
  "main": "./lib/emoticons.js",
  "keywords": [
    "emoticon",
    "smily",
    "smilies",
    "emotify",
    "parser",
    "emoji",
    "skype"
  ],
  "engines": {},
  "devDependencies": {},
  "scripts": {},
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    },
    {
      "type": "Skype Component License 1.0"
    }
  ],
  "gitHead": "0f4eff9746e4f52c8e6a926bd5aaf879c087596e",
  "readme": "## Parse text emoticons and replace them by graphics.\n\nThis is a pure string based parser and has no dependencies to DOM or jquery.\n\nIn order to insert an emoticon code into the textarea or input field you might want to use https://github.com/kof/field-selection\n\n### Features\n- copy emotified text together with emoticons, exchangable between skype and other systems\n- every emoticon can have different codes, so, when parsing useres emoticons, different styles will be recognized\n- fully customizable, define any emoticons yourself\n- nodejs ready without dependencies\n- tiny and fast\n\n### Get the api\n\n    // Within commonjs\n    var emoticons = require('emoticons');\n\n    // Within jquery\n    $.emoticons;\n\n    // From global\n    window.emoticons;\n\n### emoticons.define(data:Object)\n\nDefine a set of emoticons. See the format in skype.json. First code in the codes array will be used as primary one.\n\nExample:\n\n    emoticons.define(\n        \"smile\": {\n            \"title\": \"Smile\",\n            \"codes\": [\":)\", \":=)\", \":-)\"]\n        }\n    );\n\n### emoticons.replace(text:String, [fn:Function])\n\nReplace text emoticons by html elements which can be then styled with graphics.\n\nExample:\n\n    emoticons.replace(':)');\n\n    If you don't like the generated html, pass your own template builder function.\n\n    emoticons.replace(':)', function(name, code, title) {\n        return '<div>' + code + '</div>';\n    });\n\n### emoticons.toString([fn:Function])\n\nGet html string with all primary emoticons in order to display an overview. Optionally pass your own template builder function.\n\n### emoticons.tpl(name:String, code:String, title:String)\n\nIf you want to overwrite the default template builder function.\n\nExample:\n\n    emoticons.tpl = function(name, code, title) {\n        return '<div>' + code + '</div>';\n    };\n\n\n## External components\n\nThanks to Chris Messina for making this overview http://factoryjoe.com/projects/emoticons\n\nSkype icons included in the package have a special license, which is like BSD but without permission to modify them. See [LICENSE](./LICENSE.md) file.\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/kof/emoticons/issues"
  },
  "_id": "emoticons@0.1.8",
  "_shasum": "aaaedeaeda2ea5581c02549a317ad2881f7ee4c9",
  "_from": "git+https://github.com/kof/emoticons.git",
  "_resolved": "git+https://github.com/kof/emoticons.git#0f4eff9746e4f52c8e6a926bd5aaf879c087596e"
}
